[project]
name = "pvsite-datamodel"
dynamic = [ "version" ]
description = "SDK for interacting with the PVSite database"
authors = [{ name = "Open Climate Fix team", email = "info@openclimatefix.org" }]
readme = "README.md"

[tool.poetry]
name = "pvsite-datamodel"
version = "1.0.49"
description = "SDK for interacting with the PVSite database"
authors = ["Open Climate Fix"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
sqlalchemy = "^2.0"
psycopg2-binary = "^2.9.5"
pandas = "^2.2.3"
pydantic = "^2.3.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.249"
pytest = "^7.2.1"
testcontainers = "^3.7.1"
black = "^23.1.0"
isort = "^5.12.0"
pytest-cov = "^4.0.0"
alembic = "^1.9.4"
geopandas = "^0.14.2"

[project.urls]
"GitHub" = "https://github.com/openclimatefix/pvsite-datamodel"


[tool.mypy]
python_version = "3.10"
plugins = [
    "sqlalchemy.ext.mypy.plugin",
]
exclude = [
    "^gen/*$", # TOML basic string (double-quotes, backslash and other characters need escaping)
]

[tool.ruff]
select = [
    "E", # pycodestyle
    "W", # newline at end of files
    "F", # pyflakes
    "N", # pep8 naming
    "B", # flake8-bugbear
    # We install isort separately because we want to use the profile="black" option
    # "I", # isosort
    "D", # pydocstyle
    "S", # flake8-bandit
    "T20", # flake8-print
    "PT" # flake8-print
]
fixable = ['E']
line-length = 100
ignore = ["D203", "D213", "D200" ,"D202", "D210", "D212", "D415", "D105"]
exclude = ["__init__.py"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"tests/*" = ["S101", "D", "PT004", "PT012"]
"setup.py" = ["D100"]
"alembic/versions/*" = ["D"]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 100

[tool.black]
line-length = 100
